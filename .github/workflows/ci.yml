---
name: "CI"
on:
  - "push"
  - "pull_request"

jobs:
  setup:
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Poetry"
        run: "pip install poetry"
      - name: "Cache"
        uses: actions/cache@v2
        id: "cache-poetry"
        with:
          path: "$HOME/.cache/pypoetry/virtualenvs"
          key: "poetry-environment"
      - name: "Install environment"
        if: "steps.cached-poetry.outputs.cache-hit != 'true'"
        run: "poetry install"
      - name: "List files"
        run: "ls -al $HOME/.cache/pypoetry/virtualenvs"
      - name: "Exit"
        run: "exit 1"
  # restore:
  #   runs-on: "ubuntu-20.04"
  #   steps:
  #     - name: "Check out repository code"
  #       uses: "actions/checkout@v2"
  #     - name: "Set up Python"
  #       uses: "actions/setup-python@v2"
  #       with:
  #         python-version: "3.9"

  #     - name: "Cache"
  #       uses: actions/cache@v2
  #       with:
  #         path: "$HOME/.cache/pypoetry/virtualenvs"
  #         key: "poetry-environment"
  #     - name: "List files"
  #       run: "ls -al $HOME/.cache"
  #     - name: "Install Poetry"
  #       run: "pip install poetry"
  #     - name: "Install environment"
  #       run: "poetry install"
  #     - name: "Exit"
  #       run: "exit 1"
  #   needs:
  #     "setup"
  black:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_CHATOPS_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages for Setup"
        run: "pip install invoke black"
      - name: "Linting: black"
        run: "invoke black"
    needs:
      - "setup"
  bandit:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_CHATOPS_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages for Setup"
        run: "pip install invoke bandit"
      - name: "Linting: bandit"
        run: "invoke bandit"
    needs:
      - "black"
  pydocstyle:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_CHATOPS_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages for Setup"
        run: "pip install invoke pydocstyle"
      - name: "Linting: pydocstyle"
        run: "invoke pydocstyle"
    needs:
      - "black"
  flake8:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_CHATOPS_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages for Setup"
        run: "pip install invoke flake8"
      - name: "Linting: flake8"
        run: "invoke flake8"
    needs:
      - "black"
  yamllint:
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_CHATOPS_LOCAL: "True"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages for Setup"
        run: "pip install invoke yamllint"
      - name: "Linting: yamllint"
        run: "invoke yamllint"
    needs:
      - "black"
  build:
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages for Setup"
        run: "pip install invoke"
      - name: "Copy credentials"
        run: "cp development/creds.example.env development/creds.env"
      - name: "Build Container"
        run: "invoke build"
    needs:
      - "bandit"
      - "pydocstyle"
      - "flake8"
      - "yamllint"
  pylint:
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages for Linting"
        run: "pip install invoke poetry"
      - name: "Copy credentials"
        run: "cp development/creds.example.env development/creds.env"
      - name: "Build Container"
        run: "invoke build"
      - name: "Linting: Pylint"
        run: "invoke pylint"
    needs:
      - "build"
  unittest:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        nautobot-version: ["1.0.3", "1.1.2"]
    runs-on: "ubuntu-20.04"
    env:
      INVOKE_NAUTOBOT_CHATOPS_PYTHON_VER: "${{ matrix.python-version }}"
      INVOKE_NAUTOBOT_CHATOPS_NAUTOBOT_VER: "${{ matrix.nautobot-version }}"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages for Linting"
        run: "pip install invoke"
      - name: "Copy credentials"
        run: "cp development/creds.example.env development/creds.env"
      - name: "Build Container"
        run: "invoke build"
      - name: "Run Tests"
        run: "invoke unittest"
    needs:
      - "pylint"
  publish_gh:
    name: "Publish to GitHub"
    runs-on: "ubuntu-20.04"
    if: "startsWith(github.ref, 'refs/tags/v')"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages"
        run: "pip install poetry"
      - name: "Set env"
        run: "echo RELEASE_VERSION=${GITHUB_REF:10} >> $GITHUB_ENV"
      - name: "Run Poetry Version"
        run: "poetry version $RELEASE_VERSION"
      - name: "Run Poetry Build"
        run: "poetry build"
      - name: "Upload binaries to release"
        uses: "svenstaro/upload-release-action@v2"
        with:
          repo_token: "${{ secrets.NTC_GITHUB_TOKEN }}"
          file: "dist/*"
          tag: "${{ github.ref }}"
          overwrite: true
          file_glob: true
    needs:
      - "unittest"
  publish_pypi:
    name: "Push Package to PyPI"
    runs-on: "ubuntu-20.04"
    if: "startsWith(github.ref, 'refs/tags/v')"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: "Install Python Packages"
        run: "pip install poetry"
      - name: "Set env"
        run: "echo RELEASE_VERSION=${GITHUB_REF:10} >> $GITHUB_ENV"
      - name: "Run Poetry Version"
        run: "poetry version $RELEASE_VERSION"
      - name: "Run Poetry Build"
        run: "poetry build"
      - name: "Push to PyPI"
        uses: "pypa/gh-action-pypi-publish@release/v1"
        with:
          user: "__token__"
          password: "${{ secrets.PYPI_API_TOKEN }}"
    needs:
      - "unittest"
